I am creating this file to remember, test and learn git and github

'clone' - Cloning a repository(someone else's) on your local machine
git clone Repository Link
git clone https://github.com/varuncode01/GIthub_D.git

'git status' - tell's status and branch

'git add' - file name or if you want to add all your changes in all files use - 'git add .'

'git commit -m "some message it can also be the change you did"' - to finalise and update the file locally in our system
'git push origin main' - upload local repo content to remote repo(github)
* git push is main command 'origin' is we named the file from where we copied it from
* 'main' - it's main folder

'git init' - used to create new git repo
'git remote add origin link' it's link of repo you created you github
'git remote -v' - to verify remote
'git branch' - to check branch
'git branch -MO main' - to raname branch
'git push origin main'
'git push -u origin main' - so you don't have to write origin main again all files will be origin main automatically

'ls' - list files inside directory you are in
'ls -a' - all files will be shown including hidden files\

'cd file_name' - change directory
'cd..' - exist from this directory

* if you change something in file status will be 'modified'
* if you add a new file status will be 'untracked'
* for the cases you have to 'add'
* add - file status 'staged' and ready to 'commit'
* commit - status 'unmodified'/'unchanged'

* To check merge conflicts
* I'll add some lines
* To see how to resolve them

*** Branch Commands ***

'git branch' - to check branch
'git branch -MO branch_name' - to raname branch
'git checkout branch_name' - to navigate to different branch
'git checkout -b branch_name' - to create new branch
'git checkout -d branch_name' - to delete branch you can't delete the branch you are in
'git diff branch_name' - to compare commits, branches, files and more
way 1:
'git merge branch_name' - to merge two branches
way 2:
create a pr: on github

'git pull origin main' - used to fetch and download content from a remote repo and immediately update the local repo to match that content

***Resolving Merge Conflicts*** using command line
'git merge branch_name' - to merge two branches

*** Undoing changes ***
case 1: staged changes-they are added not commited yet
'git reset file_name' - for specific file
'git reset' - for all files in branch

case 2: commited changes(for one commit)
'git reset HEAD-1' - 'HEAD-1' it is by default name

case 3: commited changes(for many commits)
'git reset commit_hash'
'git reset --hard commit_hash'
